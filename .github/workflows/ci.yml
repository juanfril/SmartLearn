name: CI/CD Pipeline

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install -r requirements.txt

      - name: Print environment variables
        run: |
          echo "DB_NAME=$DB_NAME"
          echo "DB_USER=$DB_USER"
          echo "DB_PASSWORD=$DB_PASSWORD"
          echo "DB_HOST=$DB_HOST"
        env:
          DB_NAME: ${{ secrets.POSTGRES_DB }}
          DB_USER: ${{ secrets.POSTGRES_USER }}
          DB_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          DB_HOST: localhost

      - name: Run migrations
        env:
          DB_NAME: ${{ secrets.POSTGRES_DB }}
          DB_USER: ${{ secrets.POSTGRES_USER }}
          DB_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          DB_HOST: localhost
        run: |
          source venv/bin/activate
          python manage.py migrate

      - name: Run tests
        env:
          DB_NAME: ${{ secrets.POSTGRES_DB }}
          DB_USER: ${{ secrets.POSTGRES_USER }}
          DB_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          DB_HOST: localhost
        run: |
          source venv/bin/activate
          python manage.py test
